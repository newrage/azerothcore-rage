REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account', 0, 'Syntax: .account  Display the access level of your account and the email adress if you possess the necessary permissions.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account addon', 16, 'Syntax: .account addon #addon Set expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account create', 16, 'Syntax: .account create $account $password  Create account and set password to it.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account delete', 16, 'Syntax: .account delete $account  Delete account with all characters.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account lock country', 0, 'Syntax: .account lock country [on|off] Allow login from account only from current used Country or remove this requirement.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account lock ip', 0, 'Syntax: .account lock ip [on|off] Allow login from account only from current used IP or remove this requirement.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account onlinelist', 16, 'Syntax: .account onlinelist  Show list of online accounts.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account password', 0, 'Syntax: .account password $old_password $new_password $new_password [$email]  Change your account password. You may need to check the actual security mode to see if email input is necessary.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account set', 2, 'Syntax: .account set $subcommand Type .account set to see the list of possible subcommands or .help account set $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account set addon', 10, 'Syntax: .account set addon [$account] #addon  Set user (possible targeted) expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account set gmlevel', 16, 'Syntax: .account set gmlevel [$account] #level [#realmid]  Set the security level for targeted player (can\'t be used at self) or for account $name to a level of #level on the realm #realmID.  #level may range from 0 to 3.  #reamID may be -1 for all realms.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('account set password', 16, 'Syntax: .account set password $account $password $password  Set password for account.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('achievement', 10, 'Syntax: .achievement $subcommand Type .achievement to see the list of possible subcommands or .help achievement $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('achievement add', 10, 'Syntax: .achievement add $achievement Add an achievement to the targeted player. $achievement: can be either achievement id or achievement link');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('achievement checkall', 15, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('additem', 9, 'Syntax: .additem #itemid/[#itemname]/#shift-click-item-link #itemcount  Adds the specified number of items of id #itemid (or exact (!) name $itemname in brackets, or link created by shift-click at item in inventory or recipe) to your or selected character inventory. If #itemcount is omitted, only one item will be added. .');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('additemset', 9, 'Syntax: .additemset #itemsetid  Add items from itemset of id #itemsetid to your or selected character inventory. Will add by one example each item from itemset.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('announce', 13, 'Syntax: .announce $MessageToBroadcast  Send a global message to all players online in chat log.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('appear', 5, 'Syntax: .appear [$charactername]  Teleport to the given character. Either specify the character name or click on the character\'s portrait,e.g. when you are in a group. Character can be offline.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('arena captain', 12, 'Syntax: .arena captain #TeamID $name  A command to set new captain to the team $name must be in the team');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('arena create', 12, 'Syntax: .arena create $name "arena name" #type  A command to create a new Arena-team in game. #type  = [2/3/5]');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('arena disband', 12, 'Syntax: .arena disband #TeamID  A command to disband Arena-team in game.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('arena info', 12, 'Syntax: .arena info #TeamID  A command that show info about arena team');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('arena lookup', 12, 'Syntax: .arena lookup $name  A command that give a list of arenateam with the given $name');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('arena rename', 12, 'Syntax: .arena rename "oldname" "newname"  A command to rename Arena-team name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('aura', 11, 'Syntax: .aura #spellid  Add the aura from spell #spellid to the selected Unit.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ban', 7, 'Syntax: .ban $subcommand Type .ban to see the list of possible subcommands or .help ban $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ban account', 7, 'Syntax: .ban account $Name $bantime $reason Ban account kick player. $bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ban character', 7, 'Syntax: .ban character $Name $bantime $reason Ban character and kick player. $bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ban ip', 7, 'Syntax: .ban ip $Ip $bantime $reason Ban IP. $bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ban playeraccount', 7, 'Syntax: .ban playeraccount $Name $bantime $reason Ban account and kick player. $bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('baninfo', 7, 'Syntax: .baninfo $subcommand Type .baninfo to see the list of possible subcommands or .help baninfo $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('baninfo account', 7, 'Syntax: .baninfo account $accountid Watch full information about a specific ban.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('baninfo character', 7, 'Syntax: .baninfo character $charactername  Watch full information about a specific ban.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('baninfo ip', 7, 'Syntax: .baninfo ip $ip Watch full information about a specific ban.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('banlist', 7, 'Syntax: .banlist $subcommand Type .banlist to see the list of possible subcommands or .help banlist $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('banlist account', 7, 'Syntax: .banlist account [$Name] Searches the banlist for a account name pattern or show full list account bans.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('banlist character', 7, 'Syntax: .banlist character $Name Searches the banlist for a character name pattern. Pattern required.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('banlist ip', 7, 'Syntax: .banlist ip [$Ip] Searches the banlist for a IP pattern or show full list of IP bans.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('bf', 8, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('bf enable', 8, 'Syntax: .bf enable #battleid');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('bf start', 8, 'Syntax: .bf start #battleid');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('bf stop', 8, 'Syntax: .bf stop #battleid');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('bf switch', 8, 'Syntax: .bf switch #battleid');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('bf timer', 8, 'Syntax: .bf timer #battleid #timer');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('bindsight', 8, 'Syntax: .bindsight  Binds vision to the selected unit indefinitely. Cannot be used while currently possessing a target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('buff', 0, 'Syntax: .buff. Buff player. .buff reload - reload player_buff table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cast', 7, 'Syntax: .cast #spellid [triggered]   Cast #spellid to selected target. If no target selected cast to self. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cast back', 7, 'Syntax: .cast back #spellid [triggered]   Selected target will cast #spellid to your character. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cast dest', 7, 'Syntax: .cast dest #spellid #x #y #z [triggered]   Selected target will cast #spellid at provided destination. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cast dist', 7, 'Syntax: .cast dist #spellid [#dist [triggered]]   You will cast spell to pint at distance #dist. If \'trigered\' or part provided then spell casted with triggered flag. Not all spells can be casted as area spells.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cast self', 7, 'Syntax: .cast self #spellid [triggered] Cast #spellid by target at target itself. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cast target', 7, 'Syntax: .cast target #spellid [triggered]   Selected target will cast #spellid to his victim. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character', 7, 'Syntax: character $subcommand  Type .character to see a list of possible subcommands  or .help character $subcommand to see info on the subcommand.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character changefaction', 7, 'Syntax: .character changefaction $name  Change character faction.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character changerace', 7, 'Syntax: .character changerace $name  Change character race.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character customize', 7, 'Syntax: .character customize [$name]  Mark selected in game or by $name in command character for customize at next login.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character deleted delete', 16, 'Syntax: .character deleted delete #guid|$name  Completely deletes the selected characters. If $name is supplied, only characters with that string in their name will be deleted, if #guid is supplied, only the character with that GUID will be deleted.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character deleted list', 12, 'Syntax: .character deleted list [#guid|$name]  Shows a list with all deleted characters. If $name is supplied, only characters with that string in their name will be selected, if #guid is supplied, only the character with that GUID will be selected.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character deleted old', 16, 'Syntax: .character deleted old [#keepDays]  Completely deletes all characters with deleted time longer #keepDays. If #keepDays not provided the  used value from mangosd.conf option \'CharDelete.KeepDays\'. If referenced config option disabled (use 0 value) then command can\'t be used without #keepDays.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character deleted restore', 12, 'Syntax: .character deleted restore #guid|$name [$newname] [#new account]  Restores deleted characters. If $name is supplied, only characters with that string in their name will be restored, if $guid is supplied, only the character with that GUID will be restored. If $newname is set, the character will be restored with that name instead of the original one. If #newaccount is set, the character will be restored to specific account character list. This works only with one character!');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character erase', 16, 'Syntax: .character erase $name  Delete character $name. Character finally deleted in case any deleting options.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character level', 12, 'Syntax: .character level [$playername] [#level]  Set the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character rename', 7, 'Syntax: .character rename [$name] [$newName]   Mark selected in game or by $name in command character for rename at next login.  If $newName then the player will be forced rename.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character reputation', 12, 'Syntax: .character reputation [$player_name]  Show reputation information for selected player or player find by $player_name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('character titles', 12, 'Syntax: .character titles [$player_name]  Show known titles list for selected player or player find by $player_name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('chat', 0, 'Syntax: .chat $text .chat on To show World Chat .chat off To hide World Chat');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('chata', 5, 'Syntax: .chata $text - To speak as a GM only to Alliance');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('chath', 5, 'Syntax: .chath $text - To speak as a GM only to Horde');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cheat', 8, 'Syntax: .cheat $subcommand Type .cheat to see the list of possible subcommands or .help cheat $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cheat casttime', 8, 'Syntax: .cheat casttime [on/off] Remove spells\' casting time.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cheat cooldown', 8, 'Syntax: .cheat cooldown [on/off] Disable spells\' cooldowns.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cheat god', 8, 'Syntax: .cheat god [on/off] Turn the user invulnerable.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cheat power', 8, 'Syntax: .cheat power [on/off] Remove spells\' cost (mana, energy, rage...).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cheat taxi', 8, 'Syntax: .cheat taxi on/off Temporary grant access to all taxi routes for the selected character.  If no character is selected, hide or reveal all routes to you. Visited taxi nodes are still accessible after removing access.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cheat waterwalk', 8, 'Syntax: .cheat waterwalk on/off Allow to walk on water (self or selected character).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('combatstop', 7, 'Syntax: .combatstop [$playername] Stop combat for selected character. If selected non-player then command applied to self. If $playername provided then attempt applied to online player $playername.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cometome', 17, 'Syntax: .cometome $parameter Make selected creature come to your current location (new position not saved to DB).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('commands', 0, 'Syntax: .commands  Display a list of available commands for your account level.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('cooldown', 7, 'Syntax: .cooldown [#spell_id]  Remove all (if spell_id not provided) or #spel_id spell cooldown from selected character or you (if no selection).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('damage', 12, 'Syntax: .damage $damage_amount [$school [$spellid]]  Apply $damage to target. If not $school and $spellid provided then this flat clean melee damage without any modifiers. If $school provided then damage modified by armor reduction (if school physical), and target absorbing modifiers and result applied as melee damage to target. If spell provided then damage modified and applied as spell damage. $spellid can be shift-link.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug', 7, 'Syntax: .debug $subcommand Type .debug to see the list of possible subcommands or .help debug $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug anim', 7, 'TODO');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug areatriggers', 11, 'Syntax: .debug areatriggers Toggle debug mode for areatriggers. In debug mode GM will be notified if reaching an areatrigger');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug arena', 12, 'Syntax: .debug arena  Toggle debug mode for arenas. In debug mode GM can start arena with single player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug bg', 12, 'Syntax: .debug bg  Toggle debug mode for battlegrounds. In debug mode GM can start battleground with single player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug entervehicle', 12, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug getitemstate', 12, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug getitemvalue', 12, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug getvalue', 12, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug hostil', 12, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug itemexpire', 14, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug lootrecipient', 14, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug los', 14, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug Mod32Value', 14, 'Syntax: .debug Mod32Value #field #value  Add #value to field #field of your character.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug moveflags', 14, 'Syntax: .debug moveflags [$newMoveFlags [$newMoveFlags2]] No params given will output the current moveflags of the target');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug play', 11, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug play cinematic', 11, 'Syntax: .debug play cinematic #cinematicid  Play cinematic #cinematicid for you. You stay at place while your mind fly. ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug play movie', 11, 'Syntax: .debug play movie #movieid  Play movie #movieid for you.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug play sound', 11, 'Syntax: .debug play sound #soundid  Play sound with #soundid. Sound will be play only for you. Other players do not hear this. Warning: client may have more 5000 sounds...');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send', 11, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send buyerror', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send channelnotify', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send chatmmessage', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send equiperror', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send largepacket', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send opcode', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send qinvalidmsg', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send qpartymsg', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send sellerror', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send setphaseshift', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug send spellfail', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug setaurastate', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug setbit', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug setitemvalue', 12, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug setvalue', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug setvid', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug spawnvehicle', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug threat', 12, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug update', 12, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('debug uws', 12, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('deserter bg add', 12, 'Syntax: .deserter bg add $time    Adds the bg deserter debuff to your target with $time duration.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('deserter bg remove', 12, 'Syntax: .deserter bg remove    Removes the bg deserter debuff from your target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('deserter instance add', 12, 'Syntax: .deserter instance add $time    Adds the instance deserter debuff to your target with $time duration.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('deserter instance remove', 12, 'Syntax: .deserter instance remove    Removes the instance deserter debuff from your target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('dev', 9, 'Syntax: .dev [on/off]  Enable or Disable in game Dev tag or show current state if on/off not provided.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('die', 6, 'Syntax: .die  Kill the selected player. If no player is selected, it will kill you.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable add battleground', 10, 'Syntax: .disable add battleground $entry $flag $comment');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable add map', 10, 'Syntax: .disable add map $entry $flag $comment');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable add outdoorpvp', 10, 'Syntax: .disable add outdoorpvp $entry $flag $comment');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable add quest', 10, 'Syntax: .disable add quest $entry $flag $comment');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable add spell', 10, 'Syntax: .disable add spell $entry $flag $comment');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable add vmap', 10, 'Syntax: .disable add vmap $entry $flag $comment');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable remove battleground', 10, 'Syntax: .disable remove battleground $entry');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable remove map', 10, 'Syntax: .disable remove map $entry');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable remove outdoorpvp', 10, 'Syntax: .disable remove outdoorpvp $entry');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable remove quest', 10, 'Syntax: .disable remove quest $entry');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable remove spell', 10, 'Syntax: .disable remove spell $entry');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('disable remove vmap', 10, 'Syntax: .disable remove vmap $entry');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('dismount', 0, 'Syntax: .dismount  Dismount you, if you are mounted.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('distance', 13, 'Syntax: .distance  Display the distance from your character to the selected creature.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('event', 8, 'Syntax: .event #event_id Show details about event with #event_id.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('event activelist', 8, 'Syntax: .event activelist Show list of currently active events.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('event start', 8, 'Syntax: .event start #event_id Start event #event_id. Set start time for event to current moment (change not saved in DB).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('event stop', 8, 'Syntax: .event stop #event_id Stop event #event_id. Set start time for event to time in past that make current moment is event stop time (change not saved in DB).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('flusharenapoints', 3, 'Syntax: .flusharenapoints  Use it to distribute arena points based on arena team ratings, and start a new week.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('freeze', 6, 'Syntax: .freeze (#player) "Freezes" #player and disables his chat. When using this without #name it will freeze your target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gm', 5, 'Syntax: .gm [on/off]  Enable or Disable in game GM MODE or show current state of on/off not provided.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gm chat', 5, 'Syntax: .gm chat [on/off]  Enable or disable chat GM MODE (show gm badge in messages) or show current state of on/off not provided.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gm fly', 5, 'Syntax: .gm fly [on/off] Enable/disable gm fly mode.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gm ingame', 0, 'Syntax: .gm ingame  Display a list of available in game Game Masters.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gm list', 5, 'Syntax: .gm list  Display a list of all Game Masters accounts and security levels.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gm visible', 5, 'Syntax: .gm visible on/off  Output current visibility state or make GM visible(on) and invisible(off) for other players.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gmannounce', 7, 'Syntax: .gmannounce $announcement Send an announcement to online Gamemasters.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gmnameannounce', 7, 'Syntax: .gmnameannounce $announcement. Send an announcement to all online GM\'s, displaying the name of the sender.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gmnotify', 7, 'Syntax: .gmnotify $notification Displays a notification on the screen of all online GM\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go', 9, 'Syntax: .go $subcommand Type .go to see the list of possible subcommands or .help go $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go creature', 9, 'Syntax: .go creature #creature_guid Teleport your character to creature with guid #creature_guid. .gocreature #creature_name Teleport your character to creature with this name. .gocreature id #creature_id Teleport your character to a creature that was spawned from the template with this entry. *If* more than one creature is found, then you are teleported to the first that is found inside the database.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go gobject', 9, 'Syntax: .go object #gameobject_guid Teleport your character to gameobject with guid #gameobject_guid');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go graveyard', 9, 'Syntax: .go graveyard #graveyardId  Teleport to graveyard with the graveyardId specified.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go grid', 9, 'Syntax: .go grid #gridX #gridY [#mapId]  Teleport the gm to center of grid with provided indexes at map #mapId (or current map if it not provided).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go object', 9, '[DEPRECATED]: use ".go gobject" instead. Syntax: .go object #object_guid Teleport your character to gameobject with guid #object_guid');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go taxinode', 9, 'Syntax: .go taxinode #taxinode  Teleport player to taxinode coordinates. You can look up zone using .lookup taxinode $namepart');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go ticket', 9, 'Syntax: .go ticket #ticketid Teleports the user to the location where $ticketid was created.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go trigger', 9, 'Syntax: .go trigger #trigger_id  Teleport your character to areatrigger with id #trigger_id. Character will be teleported to trigger target if selected areatrigger is telporting trigger.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go xyz', 9, 'Syntax: .go xyz #x #y [#z [#mapid [#orientation]]]  Teleport player to point with (#x,#y,#z) coordinates at map #mapid with orientation #orientation. If z is not provided, ground/water level will be used. If mapid is not provided, the current map will be used. If #orientation is not provided, the current orientation will be used.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('go zonexy', 9, 'Syntax: .go zonexy #x #y [#zone]  Teleport player to point with (#x,#y) client coordinates at ground(water) level in zone #zoneid or current zone if #zoneid not provided. You can look up zone using .lookup area $namepart');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject', 9, 'Syntax: .gobject $subcommand Type .gobject to see the list of possible subcommands or .help gobject $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject activate', 9, 'Syntax: .gobject activate #guid  Activates an object like a door or a button.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject add', 9, 'Syntax: .gobject add #id <spawntimeSecs>  Add a game object from game object templates to the world at your current location using the #id. spawntimesecs sets the spawntime, it is optional.  Note: this is a copy of .gameobject.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject add temp', 9, 'Adds a temporary gameobject that is not saved to DB.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject delete', 9, 'Syntax: .gobject delete #go_guid Delete gameobject with guid #go_guid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject info', 9, 'Syntax: .gobject info [$object_entry]    Query Gameobject information for selected gameobject or given entry.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject move', 9, 'Syntax: .gobject move #goguid [#x #y #z]  Move gameobject #goguid to character coordinates (or to (#x,#y,#z) coordinates if its provide).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject near', 9, 'Syntax: .gobject near  [#distance]  Output gameobjects at distance #distance from player. Output gameobject guids and coordinates sorted by distance from character. If #distance not provided use 10 as default value.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject set', 9, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject set phase', 9, 'Syntax: .gobject set phase #guid #phasemask  Gameobject with DB guid #guid phasemask changed to #phasemask with related world vision update for players. Gameobject state saved to DB and persistent.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject set state', 9, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject target', 9, 'Syntax: .gobject target [#go_id|#go_name_part]  Locate and show position nearest gameobject. If #go_id or #go_name_part provide then locate and show position of nearest gameobject with gameobject template id #go_id or name included #go_name_part as part.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gobject turn', 9, 'Syntax: .gobject turn #goguid   Set for gameobject #goguid orientation same as current character orientation.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('gps', 6, 'Syntax: .gps [$name|$shift-link]  Display the position information for a selected character or creature (also if player name $name provided then for named player, or if creature/gameobject shift-link provided then pointed creature/gameobject if it loaded). Position information includes X, Y, Z, and orientation, map Id and zone Id');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('group', 7, 'Syntax: .group $subcommand Type .group to see the list of possible subcommands or .help group $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('group disband', 7, 'Syntax: .group disband [$characterName]  Disbands the given character\'s group.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('group join', 7, 'Syntax: .group join $AnyCharacterNameFromGroup [$CharacterName]  Adds to group of player $AnyCharacterNameFromGroup player $CharacterName (or selected).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('group leader', 7, 'Syntax: .group leader [$characterName]  Sets the given character as his group\'s leader.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('group list', 7, 'Syntax: .group list [$CharacterName]  Lists all the members of the group/party the player is in.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('group remove', 7, 'Syntax: .group remove [$characterName]  Removes the given character from his group.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('groupsummon', 7, 'Syntax: .groupsummon [$charactername]  Teleport the given character and his group to you. Teleported only online characters but original selected group member can be offline.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('guid', 6, 'Syntax: .guid  Display the GUID for the selected character.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('guild', 6, 'Syntax: .guild $subcommand Type .guild to see the list of possible subcommands or .help guild $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('guild create', 6, 'Syntax: .guild create [$GuildLeaderName] "$GuildName"  Create a guild named $GuildName with the player $GuildLeaderName (or selected) as leader.  Guild name must in quotes.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('guild delete', 6, 'Syntax: .guild delete "$GuildName"  Delete guild $GuildName. Guild name must in quotes.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('guild info', 6, 'Shows information about the target\'s guild or a given Guild Id or Name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('guild invite', 6, 'Syntax: .guild invite [$CharacterName] "$GuildName"  Add player $CharacterName (or selected) into a guild $GuildName. Guild name must in quotes.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('guild rank', 6, 'Syntax: .guild rank [$CharacterName] #Rank  Set for player $CharacterName (or selected) rank #Rank in a guild.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('guild uninvite', 6, 'Syntax: .guild uninvite [$CharacterName]  Remove player $CharacterName (or selected) from a guild.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('help', 0, 'Syntax: .help [$command]  Display usage instructions for the given $command. If no $command provided show list available commands.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('hidearea', 12, 'Syntax: .hidearea #areaid  Hide the area of #areaid to the selected character. If no character is selected, hide this area to you.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('honor', 8, 'Syntax: .honor $subcommand Type .honor to see the list of possible subcommands or .help honor $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('honor add', 8, 'Syntax: .honor add $amount  Add a certain amount of honor (gained today) to the selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('honor add kill', 8, 'Syntax: .honor add kill  Add the targeted unit as one of your pvp kills today (you only get honor if it\'s a racial leader or a player)');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('honor update', 8, 'Syntax: .honor update  Force the yesterday\'s honor fields to be updated with today\'s data, which will get reset for the selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('instance', 4, 'Syntax: .instance $subcommand Type .instance to see the list of possible subcommands or .help instance $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('instance getbossstate', 6, 'Syntax: .instance getbossstate $bossId [$Name] Gets the current EncounterState for the provided boss id. If no character name is provided, the current map will be used as target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('instance listbinds', 6, 'Syntax: .instance listbinds   Lists the binds of the selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('instance savedata', 4, 'Syntax: .instance savedata   Save the InstanceData for the current player\'s map to the DB.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('instance setbossstate', 6, 'Syntax: .instance setbossstate $bossId $encounterState [$Name] Sets the EncounterState for the given boss id to a new value. EncounterStates range from 0 to 5. If no character name is provided, the current map will be used as target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('instance unbind', 4, 'Syntax: .instance unbind <mapid|all> [difficulty]   Clear all/some of player\'s binds');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('itemmove', 14, 'Syntax: .itemmove #sourceslotid #destinationslotid  Move an item from slots #sourceslotid to #destinationslotid in your inventory  Not yet implemented');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('kick', 6, 'Syntax: .kick [$charactername] [$reason]  Kick the given character name from the world with or without reason. If no character name is provided then the selected player (except for yourself) will be kicked. If no reason is provided, default is "No Reason".');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn', 9, 'Syntax: .learn #spell [all]  Selected character learn a spell of id #spell. If \'all\' provided then all ranks learned.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all', 9, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all crafts', 9, 'Syntax: .learn crafts  Learn all professions and recipes.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all default', 9, 'Syntax: .learn all default [$playername]  Learn for selected/$playername player all default spells for his race/class and spells rewarded by completed quests.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all gm', 9, 'Syntax: .learn all gm  Learn all default spells for Game Masters.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all lang', 9, 'Syntax: .learn all lang  Learn all languages');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all my', 9, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all my class', 9, 'Syntax: .learn all my class  Learn all spells and talents available for his class.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all my pettalents', 9, 'Syntax: .learn all my pettalents  Learn all talents for your pet available for his creature type (only for hunter pets).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all my spells', 9, 'Syntax: .learn all my spells  Learn all spells (except talents and spells with first rank learned as talent) available for his class.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all my talents', 9, 'Syntax: .learn all my talents  Learn all talents (and spells with first rank learned as talent) available for his class.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('learn all recipes', 9, 'Syntax: .learn all recipes [$profession]  Learns all recipes of specified profession and sets skill level to max. Example: .learn all recipes enchanting');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('levelup', 7, 'Syntax: .levelup [$playername] [#numberoflevels]  Increase/decrease the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lfg', 6, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lfg clean', 6, 'Syntax: .flg clean  Cleans current queue, only for debugging purposes.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lfg group', 6, 'Syntax: .lfg group  Shows information about all players in the group  (state, roles, comment, dungeons selected).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lfg options', 6, 'Syntax: .lfg options [new value]  Shows current lfg options. New value is set if extra param is present.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lfg player', 6, 'Syntax: .lfg player  Shows information about player (state, roles, comment, dungeons selected).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lfg queue', 6, 'Syntax: .lfg queue  Shows info about current lfg queues.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('linkgrave', 14, 'Syntax: .linkgrave #graveyard_id [alliance|horde]  Link current zone to graveyard for any (or alliance/horde faction ghosts). This let character ghost from zone teleport to graveyard after die if graveyard is nearest from linked to zone and accept ghost of this faction. Add only single graveyard at another map and only if no graveyards linked (or planned linked at same map).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('list', 6, 'Syntax: .list $subcommand Type .list to see the list of possible subcommands or .help list $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('list auras', 6, 'Syntax: .list auras List auras (passive and active) of selected creature or player. If no creature or player is selected, list your own auras.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('list creature', 6, 'Syntax: .list creature #creature_id [#max_count]  Output creatures with creature id #creature_id found in world. Output creature guids and coordinates sorted by distance from character. Will be output maximum #max_count creatures. If #max_count not provided use 10 as default value.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('list gobject', 6, 'Syntax: .list object #gameobject_id [#max_count]  Output gameobjects with gameobject id #gameobject_id found in world. Output gameobject guids and coordinates sorted by distance from character. Will be output maximum #max_count gameobject. If #max_count not provided use 10 as default value.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('list item', 6, 'Syntax: .list item #item_id [#max_count]  Output items with item id #item_id found in all character inventories, mails, auctions, and guild banks. Output item guids, item owner guid, owner account and owner name (guild name and guid in case guild bank). Will be output maximum #max_count items. If #max_count not provided use 10 as default value.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('list object', 6, '[DEPRECATED]: use ".list gobject" instead. Syntax: .go object #object_guid Teleport your character to gameobject with guid #object_guid');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup', 6, 'Syntax: .lookup $subcommand Type .lookup to see the list of possible subcommands or .help lookup $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup area', 6, 'Syntax: .lookup area $namepart  Looks up an area by $namepart, and returns all matches with their area ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup creature', 6, 'Syntax: .lookup creature $namepart  Looks up a creature by $namepart, and returns all matches with their creature ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup event', 6, 'Syntax: .lookup event $name Attempts to find the ID of the event with the provided $name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup faction', 6, 'Syntax: .lookup faction $name Attempts to find the ID of the faction with the provided $name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup gobject', 6, 'Syntax: .lookup object $objname  Looks up an gameobject by $objname, and returns all matches with their Gameobject ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup item', 6, 'Syntax: .lookup item $itemname  Looks up an item by $itemname, and returns all matches with their Item ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup itemset', 6, 'Syntax: .lookup itemset $itemname  Looks up an item set by $itemname, and returns all matches with their Item set ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup map', 6, 'Syntax: .lookup map $namepart  Looks up a map by $namepart, and returns all matches with their map ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup object', 6, '[DEPRECATED]: use ".lookup gobject" instead. Syntax: .go object #object_guid Teleport your character to gameobject with guid #object_guid');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup player', 6, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup player account', 6, 'Syntax: .lookup player account $account ($limit)    Searchs players, which account username is $account with optional parametr $limit of results.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup player email', 12, 'Syntax: .lookup player email $email ($limit)    Searchs players, which account email is $email with optional parametr $limit of results.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup player ip', 12, 'Syntax: .lookup player ip $ip ($limit)    Searchs players, which account ast_ip is $ip with optional parametr $limit of results.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup quest', 6, 'Syntax: .lookup quest $namepart  Looks up a quest by $namepart, and returns all matches with their quest ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup skill', 6, 'Syntax: .lookup skill $$namepart  Looks up a skill by $namepart, and returns all matches with their skill ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup spell', 6, 'Syntax: .lookup spell $namepart  Looks up a spell by $namepart, and returns all matches with their spell ID\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup spell id', 12, 'Syntax: .lookup spell id #spellid  Looks up a spell by #spellid, and returns the match with its spell name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup taxinode', 12, 'Syntax: .lookup taxinode $substring  Search and output all taxinodes with provide $substring in name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup tele', 6, 'Syntax: .lookup tele $substring  Search and output all .tele command locations with provide $substring in name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('lookup title', 6, 'Syntax: .lookup title $$namepart  Looks up a title by $namepart, and returns all matches with their title ID\'s and index\'s.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mailbox', 4, 'Syntax: .mailbox  Show your mailbox content.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('maxskill', 11, 'Syntax: .maxskill Sets all skills of the targeted player to their maximum values for its current level.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mmap', 15, 'Syntax: Syntax: .mmaps $subcommand Type .mmaps to see the list of possible subcommands or .help mmaps $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mmap loadedtiles', 15, 'Syntax: .mmap loadedtiles to show which tiles are currently loaded');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mmap loc', 15, 'Syntax: .mmap loc to print on which tile one is');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mmap path', 15, 'Syntax: .mmap path to calculate and show a path to current select unit');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mmap stats', 15, 'Syntax: .mmap stats to show information about current state of mmaps');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mmap testarea', 15, 'Syntax: .mmap testarea to calculate paths for all nearby npcs to player');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify', 7, 'Syntax: .modify $subcommand Type .modify to see the list of possible subcommands or .help modify $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify arenapoints', 9, 'Syntax: .modify arenapoints #value Add $amount arena points to the selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify bit', 9, 'Syntax: .modify bit #field #bit  Toggle the #bit bit of the #field field for the selected player. If no player is selected, modify your character.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify drunk', 7, 'Syntax: .modify drunk #value  Set drunk level to #value (0..100). Value 0 remove drunk state, 100 is max drunked state.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify energy', 9, 'Syntax: .modify energy #energy  Modify the energy of the selected player. If no player is selected, modify your energy.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify faction', 9, 'Syntax: .modify faction #factionid #flagid #npcflagid #dynamicflagid  Modify the faction and flags of the selected creature. Without arguments, display the faction and flags of the selected creature.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify gender', 7, 'Syntax: .modify gender male/female  Change gender of selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify honor', 8, 'Syntax: .modify honor $amount  Add $amount honor points to the selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify hp', 9, 'Syntax: .modify hp #newhp  Modify the hp of the selected player. If no player is selected, modify your hp.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify mana', 9, 'Syntax: .modify mana #newmana  Modify the mana of the selected player. If no player is selected, modify your mana.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify money', 9, 'Syntax: .modify money #money .money #money  Add or remove money to the selected player. If no player is selected, modify your money.   #gold can be negative to remove money.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify mount', 9, 'Syntax: .modify mount #id #speed Display selected player as mounted at #id creature and set speed to #speed value.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify phase', 9, 'Syntax: .modify phase #phasemask  Selected character phasemask changed to #phasemask with related world vision update. Change active until in game phase changed, or GM-mode enable/disable, or re-login. Character pts pasemask update to same value.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify rage', 9, 'Syntax: .modify rage #newrage  Modify the rage of the selected player. If no player is selected, modify your rage.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify reputation', 9, 'Syntax: .modify reputation #repId (#repvalue | $rankname [#delta]) Sets the selected players reputation with faction #repId to #repvalue or to $reprank. If the reputation rank name is provided, the resulting reputation will be the lowest reputation for that rank plus the delta amount, if specified. You can use \'.pinfo rep\' to list all known reputation ids, or use \'.lookup faction $name\' to locate a specific faction id.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify runicpower', 9, 'Syntax: .modify runicpower #newrunicpower  Modify the runic power of the selected player. If no player is selected, modify your runic power.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify scale', 9, '.modify scale #scale Modify size of the selected player or creature to "normal scale"*rate. If no player or creature is selected, modify your size. #rate may range from 0.1 to 10.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify speed', 9, 'Syntax: .modify speed $speedtype #rate  Modify the running speed of the selected player to "normal base run speed"= 1. If no player is selected, modify your speed.  $speedtypes may be fly, all, walk, backwalk, or swim.   #rate may range from 0.1 to 50.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify speed all', 9, 'Syntax: .modify aspeed #rate  Modify all speeds -run,swim,run back,swim back- of the selected player to "normalbase speed for this move type"*rate. If no player is selected, modify your speed.   #rate may range from 0.1 to 50.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify speed backwalk', 9, 'Syntax: .modify speed backwalk #rate  Modify the speed of the selected player while running backwards to "normal walk back speed"*rate. If no player is selected, modify your speed.   #rate may range from 0.1 to 50.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify speed fly', 7, '.modify speed fly #rate Modify the flying speed of the selected player to "normal flying speed"*rate. If no player is selected, modify your speed.  #rate may range from 0.1 to 50.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify speed swim', 9, 'Syntax: .modify speed swim #rate  Modify the swim speed of the selected player to "normal swim speed"*rate. If no player is selected, modify your speed.   #rate may range from 0.1 to 50.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify speed walk', 9, 'Syntax: .modify speed bwalk #rate  Modify the speed of the selected player while running to "normal walk speed"*rate. If no player is selected, modify your speed.   #rate may range from 0.1 to 50.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify spell', 9, 'TODO');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify standstate', 9, 'Syntax: .modify standstate #emoteid  Change the emote of your character while standing to #emoteid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('modify talentpoints', 9, 'Syntax: .modify talentpoints #amount  Set free talent points for selected character or character\'s pet. It will be reset to default expected at next levelup/login/quest reward.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('morph', 6, 'Syntax: .morph $subcommand Type .morph to see the list of possible subcommands or ".help morph" to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('morph reset', 6, 'Syntax: .morph reset - Doesn\'t use any parameters to reset the selected target\'s model');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('morph target', 6, 'Syntax: .morph target #displayid - Change the selected target\'s current model id to #displayid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('movegens', 14, 'Syntax: .movegens   Show movement generators stack for selected creature or player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mute', 7, 'Syntax: .mute [$playerName] $timeInMinutes [$reason]  Disible chat messaging for any character from account of character $playerName (or currently selected) at $timeInMinutes minutes. Player can be offline.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('mutehistory', 7, 'Syntax: .mutehistory $accountName. Shows mute history for an account.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('nameannounce', 5, 'Syntax: .nameannounce $announcement. Send an announcement to all online players, displaying the name of the sender.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('neargrave', 14, 'Syntax: .neargrave [alliance|horde]  Find nearest graveyard linked to zone (or only nearest from accepts alliance or horde faction ghosts).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('notify', 9, 'Syntax: .notify $MessageToBroadcast  Send a global message to all players online in screen.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc', 9, 'Syntax: .npc $subcommand Type .npc to see the list of possible subcommands or .help npc $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc add', 9, 'Syntax: .npc add #creatureid  Spawn a creature by the given template id of #creatureid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc add formation', 9, 'Syntax: .npc add formation $leader Add selected creature to a leader\'s formation.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc add item', 9, 'Syntax: .npc add item #itemId <#maxcount><#incrtime><#extendedcost>r  Add item #itemid to item list of selected vendor. Also optionally set max count item in vendor item list and time to item count restoring and items ExtendedCost.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc add move', 9, 'Syntax: .npc add move #creature_guid [#waittime]  Add your current location as a waypoint for creature with guid #creature_guid. And optional add wait time.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc add temp', 9, 'Syntax: .npc add temp  Adds temporary NPC, not saved to database.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc delete', 9, 'Syntax: .npc delete [#guid]  Delete creature with guid #guid (or the selected if no guid is provided)');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc delete item', 9, 'Syntax: .npc delete item #itemId  Remove item #itemid from item list of selected vendor.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc follow', 9, 'Syntax: .npc follow start  Selected creature start follow you until death/fight/etc.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc follow stop', 9, 'Syntax: .npc follow stop  Selected creature (non pet) stop follow you.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc info', 7, 'Syntax: .npc info  Display a list of details for the selected creature.  The list includes: - GUID, Faction, NPC flags, Entry ID, Model ID, - Level, - Health (current/maximum),  - Field flags, dynamic flags, faction template,  - Position information, - and the creature type, e.g. if the creature is a vendor.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc move', 9, 'Syntax: .npc move [#creature_guid]  Move the targeted creature spawn point to your coordinates.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc near', 9, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc playemote', 9, 'Syntax: .npc playemote #emoteid  Make the selected creature emote with an emote of id #emoteid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc say', 8, 'Syntax: .npc say $message Make selected creature say specified message.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set', 9, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set allowmove', 16, 'Syntax: .npc set allowmove  Enable or disable movement creatures in world. Not implemented.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set data', 9, 'Syntax: .npc set data $field $data Sets data for the selected creature. Used for testing Scripting');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set entry', 9, 'Syntax: .npc set entry $entry Switch selected creature with another entry from creature_template. - New creature.id value not saved to DB.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set faction original', 9, 'Syntax: .npc set faction original  Revert the temporal faction of the selected creature.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set faction permanent', 9, 'Syntax: .npc set faction permanent #factionid  Permanently set the faction of the selected creature to #factionid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set faction temp', 9, 'Syntax: .npc set faction temp #factionid  Temporarily set the faction of the selected creature to #factionid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set flag', 8, 'Syntax: .npc set flag #npcflag  Set the NPC flags of creature template of the selected creature and selected creature to #npcflag. NPC flags will applied to all creatures of selected creature template after server restart or grid unload/load.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set level', 8, 'Syntax: .npc set level #level  Change the level of the selected creature to #level.  #level may range from 1 to (CONFIG_MAX_PLAYER_LEVEL) + 3.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set link', 9, 'Syntax: .npc set link $creatureGUID  Links respawn of selected creature to the condition that $creatureGUID defined is alive.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set model', 9, 'Syntax: .npc set model #displayid  Change the model id of the selected creature to #displayid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set movetype', 9, 'Syntax: .npc set movetype [#creature_guid] stay/random/way [NODEL]  Set for creature pointed by #creature_guid (or selected if #creature_guid not provided) movement type and move it to respawn position (if creature alive). Any existing waypoints for creature will be removed from the database if you do not use NODEL. If the creature is dead then movement type will applied at creature respawn. Make sure you use NODEL, if you want to keep the waypoints.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set phase', 9, 'Syntax: .npc set phase #phasemask  Selected unit or pet phasemask changed to #phasemask with related world vision update for players. In creature case state saved to DB and persistent. In pet case change active until in game phase changed for owner, owner re-login, or GM-mode enable/disable..');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set spawntime', 9, 'Syntax: .npc set spawntime #time   Adjust spawntime of selected creature to time.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc set wanderdistance', 9, 'Syntax: .npc set wanderdistance #dist  Adjust wander distance of selected creature to dist.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc tame', 9, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc textemote', 9, 'Syntax: .npc textemote #emoteid  Make the selected creature to do textemote with an emote of id #emoteid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc whisper', 8, 'Syntax: .npc whisper #playerguid #text Make the selected npc whisper #text to  #playerguid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('npc yell', 8, 'Syntax: .npc yell $message Make selected creature yell specified message.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('pdump', 14, 'Syntax: .pdump $subcommand Type .pdump to see the list of possible subcommands or .help pdump $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('pdump load', 14, 'Syntax: .pdump load $filename $account [$newname] [$newguid] Load character dump from dump file into character list of $account with saved or $newname, with saved (or first free) or $newguid guid.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('pdump write', 14, 'Syntax: .pdump write $filename $playerNameOrGUID Write character dump with name/guid $playerNameOrGUID to file $filename.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('pet', 7, 'Syntax: .pet $subcommand Type .pet to see the list of possible subcommands or .help pet $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('pet create', 7, 'Syntax: .pet create  Creates a pet of the selected creature.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('pet learn', 7, 'Syntax: .pet learn  Learn #spellid to pet.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('pet unlearn', 7, 'Syntax: .pet unlean  unLearn #spellid to pet.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('pinfo', 5, 'Syntax: .pinfo [$player_name/#GUID]  Output account information and guild information for selected player or player find by $player_name or #GUID.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('playall', 7, 'Syntax: .playall #soundid  Player a sound to whole server.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('player learn', 9, 'Syntax: .player learn #playername #spell [all].');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('player unlearn', 9, 'Syntax: .player unlearn #playername #spell [all].');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('possess', 8, 'Syntax: .possess  Possesses indefinitely the selected creature.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('quest', 8, 'Syntax: .quest $subcommand Type .quest to see the list of possible subcommands or .help quest $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('quest add', 8, 'Syntax: .quest add #quest_id  Add to character quest log quest #quest_id. Quest started from item can\'t be added by this command but correct .additem call provided in command output.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('quest complete', 8, 'Syntax: .quest complete #questid Mark all quest objectives as completed for target character active quest. After this target character can go and get quest reward.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('quest remove', 8, 'Syntax: .quest remove #quest_id  Set quest #quest_id state to not completed and not active (and remove from active quest list) for selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('quest reward', 8, 'Syntax: .quest reward #questId  Grants quest reward to selected player and removes quest from his log (quest must be in completed state).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('recall', 5, 'Syntax: .recall [$playername]  Teleport $playername or selected player to the place where he has been before last use of a teleportation command. If no $playername is entered and no player is selected, it will teleport you.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload', 10, 'Syntax: .reload $subcommand Type .reload to see the list of possible subcommands or .help reload $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload access_requirement', 10, 'Syntax: .reload access_requirement Reload access_requirement table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload achievement_criteria_data', 10, 'Syntax: .reload achievement_criteria_data Reload achievement_criteria_data table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload achievement_reward', 10, 'Syntax: .reload achievement_reward Reload achievement_reward table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload achievement_reward_locale', 10, 'Syntax: .reload achievement_reward_locale Reload achievement_reward_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload acore_string', 10, 'Syntax: .reload acore_string Reload acore_string table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all', 10, 'Syntax: .reload all  Reload all tables with reload support added and that can be _safe_ reloaded.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all achievement', 10, 'Syntax: .reload all achievement  Reload achievement_reward, achievement_criteria_data tables.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all area', 10, 'Syntax: .reload all area  Reload areatrigger_teleport, areatrigger_tavern, game_graveyard_zone tables.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all gossips', 10, 'Syntax: .reload all gossips Reload gossip_menu, gossip_menu_option, gossip_scripts, points_of_interest tables.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all item', 10, 'Syntax: .reload all item Reload page_text, item_enchantment_table tables.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all locales', 10, 'Syntax: .reload all locales  Reload all `locales_*` tables with reload support added and that can be _safe_ reloaded.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all loot', 10, 'Syntax: .reload all loot  Reload all `*_loot_template` tables. This can be slow operation with lags for server run.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all npc', 10, 'Syntax: .reload all npc Reload npc_option, npc_trainer, npc vendor, points of interest tables.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all quest', 10, 'Syntax: .reload all quest  Reload all quest related tables if reload support added for this table and this table can be _safe_ reloaded.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all scripts', 10, 'Syntax: .reload all scripts Reload gameobject_scripts, event_scripts, quest_end_scripts, quest_start_scripts, spell_scripts, db_script_string, waypoint_scripts tables.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload all spell', 10, 'Syntax: .reload all spell  Reload all `spell_*` tables with reload support added and that can be _safe_ reloaded.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload areatrigger_involvedrelation', 10, 'Syntax: .reload areatrigger_involvedrelation Reload areatrigger_involvedrelation table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload areatrigger_tavern', 10, 'Syntax: .reload areatrigger_tavern Reload areatrigger_tavern table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload areatrigger_teleport', 10, 'Syntax: .reload areatrigger_teleport Reload areatrigger_teleport table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload auctions', 10, 'Syntax: .reload auctions Reload dynamic data tables from the database.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload autobroadcast', 10, 'Syntax: .reload autobroadcast Reload autobroadcast table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload battleground_template', 10, 'Syntax: .reload battleground_template Reload Battleground Templates.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload broadcast_text', 10, 'Syntax: .reload broadcast_text  Reload broadcast_text table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload command', 10, 'Syntax: .reload command Reload command table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload conditions', 10, 'Reload conditions table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload config', 10, 'Syntax: .reload config  Reload config settings (by default stored in trinityd.conf). Not all settings can be change at reload: some new setting values will be ignored until restart, some values will applied with delay or only to new objects/maps, some values will explicitly rejected to change at reload.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_linked_respawn', 10, 'Syntax: .reload creature_linked_respawn Reload creature_linked_respawn table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_loot_template', 10, 'Syntax: .reload creature_loot_template Reload creature_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_onkill_reputation', 10, 'Syntax: .reload creature_onkill_reputation Reload creature_onkill_reputation table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_questender', 10, 'Syntax: .reload creature_questender Reload creature_questender table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_queststarter', 10, 'Syntax: .reload creature_queststarter Reload creature_queststarter table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_template', 10, 'Syntax: .reload creature_template $entry Reload the specified creature\'s template.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_template_locale', 10, 'Syntax: .reload creature_template_locale Reload creature_template_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_text', 10, 'Syntax: .reload creature_text Reload creature_text table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload creature_text_locale', 10, 'Syntax: .reload creature_text_locale Reload creature_text_locale Table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload disables', 10, 'Syntax: .reload disables Reload disables table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload disenchant_loot_template', 10, 'Syntax: .reload disenchant_loot_template Reload disenchant_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload event_scripts', 10, 'Syntax: .reload event_scripts Reload event_scripts table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload fishing_loot_template', 10, 'Syntax: .reload fishing_loot_template Reload fishing_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload gameobject_loot_template', 10, 'Syntax: .reload gameobject_loot_template Reload gameobject_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload gameobject_questender', 10, 'Syntax: .reload gameobject_questender\\nReload gameobject_questender table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload gameobject_queststarter', 10, 'Syntax: .reload gameobject_queststarter Reload gameobject_queststarter table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload gameobject_template_locale', 10, 'Syntax: .reload gameobject_template_locale Reload gameobject_template_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload game_graveyard', 10, 'Syntax: .reload game_graveyard Reload game_graveyard table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload game_tele', 10, 'Syntax: .reload game_tele Reload game_tele table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload gm_tickets', 10, 'Syntax: .reload gm_tickets Reload gm_tickets table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload gossip_menu', 10, 'Syntax: .reload gossip_menu Reload gossip_menu table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload gossip_menu_option', 10, 'Syntax: .reload gossip_menu_option Reload gossip_menu_option table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload gossip_menu_option_locale', 10, 'Syntax: .reload gossip_menu_option_locale Reload gossip_menu_option_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload graveyard_zone', 10, 'Syntax: .reload graveyard_zone');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload item_enchantment_template', 10, 'Syntax: .reload item_enchantment_template Reload item_enchantment_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload item_loot_template', 10, 'Syntax: .reload item_loot_template Reload item_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload item_set_names', 10, 'Syntax: .reload item_set_names Reload item_set_names table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload item_set_name_locale', 10, 'Syntax: .reload item_set_name_locale Reload item_set_name_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload item_template_locale', 10, 'Syntax: .reload item_template_locale Reload item_template_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload lfg_dungeon_rewards', 10, 'Syntax: .reload lfg_dungeon_rewards Reload lfg_dungeon_rewards table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload mail_level_reward', 10, 'Syntax: .reload mail_level_reward Reload mail_level_reward table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload mail_loot_template', 10, 'Syntax: .reload quest_mail_loot_template Reload quest_mail_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload milling_loot_template', 10, 'Syntax: .reload milling_loot_template Reload milling_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload npc_spellclick_spells', 10, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload npc_text_locale', 10, 'Syntax: .reload npc_text_locale Reload npc_text_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload npc_trainer', 10, 'Syntax: .reload npc_trainer Reload npc_trainer table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload npc_vendor', 10, 'Syntax: .reload npc_vendor Reload npc_vendor table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload page_text', 10, 'Syntax: .reload page_text Reload page_text table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload page_text_locale', 10, 'Syntax: .reload page_text_locale Reload page_tex_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload pickpocketing_loot_template', 10, 'Syntax: .reload pickpocketing_loot_template Reload pickpocketing_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload points_of_interest', 10, 'Syntax: .reload points_of_interest Reload points_of_interest table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload points_of_interest_locale', 10, 'Syntax: .reload points_of_interest_locale Reload points_of_interest_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload prospecting_loot_template', 10, 'Syntax: .reload prospecting_loot_template Reload prospecting_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload quest_poi', 10, 'Syntax: .reload quest_poi Reload quest_poi table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload quest_template', 10, 'Syntax: .reload quest_template Reload quest_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload quest_template_locale', 10, 'Syntax: .reload quest_template_locale Reload quest_template_locale table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload reference_loot_template', 10, 'Syntax: .reload reference_loot_template Reload reference_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload reserved_name', 10, 'Syntax: .reload reserved_name Reload reserved_name table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload skill_discovery_template', 10, 'Syntax: .reload skill_discovery_template Reload skill_discovery_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload skill_extra_item_template', 10, 'Syntax: .reload skill_extra_item_template Reload skill_extra_item_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload skill_fishing_base_level', 10, 'Syntax: .reload skill_fishing_base_level Reload skill_fishing_base_level table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload skinning_loot_template', 10, 'Syntax: .reload skinning_loot_template Reload skinning_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload smart_scripts', 10, 'Syntax: .reload smart_scripts Reload smart_scripts table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_area', 10, 'Syntax: .reload spell_area Reload spell_area table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_bonus_data', 10, 'Syntax: .reload spell_bonus_data Reload spell_bonus_data table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_group', 10, 'Syntax: .reload spell_group Reload spell_group table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_group_stack_rules', 10, 'Syntax: .reload spell_group Reload spell_group_stack_rules table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_linked_spell', 10, 'Usage: .reload spell_linked_spell Reloads the spell_linked_spell DB table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_loot_template', 10, 'Syntax: .reload spell_loot_template Reload spell_loot_template table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_pet_auras', 10, 'Syntax: .reload spell_pet_auras Reload spell_pet_auras table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_proc', 10, 'Syntax: .reload spell_proc Reload spell_proc table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_proc_event', 10, 'Syntax: .reload spell_proc_event Reload spell_proc_event table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_required', 10, 'Syntax: .reload spell_required Reload spell_required table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_scripts', 10, 'Syntax: .reload spell_scripts Reload spell_scripts table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_target_position', 10, 'Syntax: .reload spell_target_position Reload spell_target_position table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload spell_threats', 10, 'Syntax: .reload spell_threats Reload spell_threats table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload vehicle_accessory', 10, 'Syntax: .reload vehicle_accessory  Reloads GUID-based vehicle accessory definitions from the database.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload vehicle_template_accessory', 10, 'Syntax: .reload vehicle_template_accessory  Reloads entry-based vehicle accessory definitions from the database.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload waypoint_data', 10, 'Syntax: .reload waypoint_data will reload waypoint_data table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reload waypoint_scripts', 10, 'Syntax: .reload waypoint_scripts Reload waypoint_scripts table.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('repairitems', 4, 'Syntax: .repairitems  Repair all selected player\'s items.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reset', 11, 'Syntax: .reset $subcommand Type .reset to see the list of possible subcommands or .help reset $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reset achievements', 11, 'Syntax: .reset achievements [$playername]  Reset achievements data for selected or named (online or offline) character. Achievements for persistance progress data like completed quests/etc re-filled at reset. Achievements for events like kills/casts/etc will lost.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reset all', 11, 'Syntax: .reset all spells  Syntax: .reset all talents  Request reset spells or talents (including talents for all character\'s pets if any) at next login each existed character.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reset honor', 11, 'Syntax: .reset honor [Playername]   Reset all honor data for targeted character.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reset level', 11, 'Syntax: .reset level [Playername]   Reset level to 1 including reset stats and talents.  Equipped items with greater level requirement can be lost.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reset spells', 11, 'Syntax: .reset spells [Playername]   Removes all non-original spells from spellbook. . Playername can be name of offline character.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reset stats', 11, 'Syntax: .reset stats [Playername]   Resets(recalculate) all stats of the targeted player to their original VALUESat current level.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('reset talents', 11, 'Syntax: .reset talents [Playername]   Removes all talents of the targeted player or pet or named player. Playername can be name of offline character. With player talents also will be reset talents for all character\'s pets if any.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('respawn', 9, 'Syntax: .respawn  Respawn all nearest creatures and GO without waiting respawn time expiration.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('revive', 4, 'Syntax: .revive  Revive the selected player. If no player is selected, it will revive you.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('save', 0, 'Syntax: .save  Saves your character.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('saveall', 6, 'Syntax: .saveall  Save all characters in game.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('send', 11, 'Syntax: send $subcommand  Type .send to see a list of possible subcommands  or .help send $subcommand to see info on the subcommand.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('send items', 11, 'Syntax: .send items #playername "#subject" "#text" itemid1[:count1] itemid2[:count2] ... itemidN[:countN]  Send a mail to a player. Subject and mail text must be in "". If for itemid not provided related count values then expected 1, if count > max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('send mail', 11, 'Syntax: .send mail #playername "#subject" "#text"  Send a mail to a player. Subject and mail text must be in "".');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('send message', 11, 'Syntax: .send message $playername $message  Send screen message to player from ADMINISTRATOR.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('send money', 11, 'Syntax: .send money #playername "#subject" "#text" #money  Send mail with money to a player. Subject and mail text must be in "".');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server', 0, 'Syntax: .server $subcommand Type .server to see the list of possible subcommands or .help server $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server corpses', 7, 'Syntax: .server corpses  Triggering corpses expire check in world.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server exit', 16, 'Syntax: .server exit  Terminate trinity-core NOW. Exit code 0.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server idlerestart', 15, 'Syntax: .server idlerestart #delay  Restart the server after #delay seconds if no active connections are present (no players). Use #exist_code or 2 as program exist code.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server idlerestart cancel', 15, 'Syntax: .server idlerestart cancel  Cancel the restart/shutdown timer if any.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server idleshutdown', 13, 'Syntax: .server idleshutdown #delay [#exist_code]  Shut the server down after #delay seconds if no active connections are present (no players). Use #exist_code or 0 as program exist code.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server idleshutdown cancel', 13, 'Syntax: .server idleshutdown cancel  Cancel the restart/shutdown timer if any.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server info', 0, 'Syntax: .server info  Display server version and the number of connected players.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server motd', 0, 'Syntax: .server motd  Show server Message of the day.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server restart', 13, 'Syntax: .server restart #delay  Restart the server after #delay seconds. Use #exist_code or 2 as program exist code.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server restart cancel', 13, 'Syntax: .server restart cancel  Cancel the restart/shutdown timer if any.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server set closed', 13, 'Syntax: server set closed on/off  Sets whether the world accepts new client connectsions.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server set loglevel', 16, 'Syntax: .server set loglevel $facility $name $loglevel. $facility can take the values: appender (a) or logger (l). $loglevel can take the values: disabled (0), trace (1), debug (2), info (3), warn (4), error (5) or fatal (6)');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server set motd', 13, 'Syntax: .server set motd $MOTD  Set server Message of the day.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server shutdown', 15, 'Syntax: .server shutdown #delay [#exit_code]  Shut the server down after #delay seconds. Use #exit_code or 0 as program exit code.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server shutdown cancel', 15, 'Syntax: .server shutdown cancel  Cancel the restart/shutdown timer if any.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('server togglequerylog', 15, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('setskill', 11, 'Syntax: .setskill #skill #level [#max]  Set a skill of id #skill with a current skill value of #level and a maximum value of #max (or equal current maximum if not provide) for the selected character. If no character is selected, you learn the skill.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('showarea', 12, 'Syntax: .showarea #areaid  Reveal the area of #areaid to the selected character. If no character is selected, reveal this area to you.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('skirmish', 15, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('spect', 0, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('spect leave', 0, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('spect reset', 0, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('spect spectate', 0, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('spect version', 0, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('spect watch', 0, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('summon', 7, 'Syntax: .summon [$charactername]  Teleport the given character to you. Character can be offline.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('tele', 3, 'Syntax: .tele #location  Teleport player to a given location.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('tele add', 13, 'Syntax: .tele add $name  Add current your position to .tele command target locations list with name $name.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('tele del', 13, 'Syntax: .tele del $name  Remove location with name $name for .tele command locations list.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('tele group', 13, 'Syntax: .tele group#location  Teleport a selected player and his group members to a given location.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('tele name', 13, 'Syntax: .tele name [#playername] #location  Teleport the given character to a given location. Character can be offline.  To teleport to homebind, set #location to "$home" (without quotes).');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket', 5, 'Syntax: .ticket $subcommand Type .ticket to see the list of possible subcommands or .help ticket $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket assign', 6, 'Usage: .ticket assign $ticketid $gmname. Assigns the specified ticket to the specified Game Master.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket close', 6, 'Usage: .ticket close $ticketid. Closes the specified ticket. Does not delete permanently.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket closedlist', 6, 'Displays a list of closed GM tickets.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket comment', 6, 'Usage: .ticket comment $ticketid $comment. Allows the adding or modifying of a comment to the specified ticket.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket complete', 6, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket delete', 6, 'Usage: .ticket delete $ticketid. Deletes the specified ticket permanently. Ticket must be closed first.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket escalate', 6, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket escalatedlist', 6, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket list', 5, 'Displays a list of open GM tickets.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket onlinelist', 5, 'Displays a list of open GM tickets whose owner is online.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket reset', 6, 'Syntax: .ticket reset Removes all closed tickets and resets the counter, if no pending open tickets are existing.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket response', 6, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket response append', 6, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket response appendln', 6, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket togglesystem', 15, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket unassign', 6, 'Usage: .ticket unassign $ticketid. Unassigns the specified ticket from the current assigned Game Master.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket viewid', 6, 'Usage: .ticket viewid $ticketid. Returns details about specified ticket. Ticket must be open and not deleted.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('ticket viewname', 6, 'Usage: .ticket viewname $creatorname.  Returns details about specified ticket. Ticket must be open and not deleted.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('titles', 11, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('titles add', 11, 'Syntax: .titles add #title Add title #title (id or shift-link) to known titles list for selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('titles current', 11, 'Syntax: .titles current #title Set title #title (id or shift-link) as current selected titl for selected player. If title not in known title list for player then it will be added to list.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('titles remove', 11, 'Syntax: .titles remove #title Remove title #title (id or shift-link) from known titles list for selected player.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('titles set', 11, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('titles set mask', 11, 'Syntax: .titles set mask #mask  Allows user to use all titles from #mask.   #mask=0 disables the title-choose-field');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unaura', 11, 'Syntax: .unaura #spellid  Remove aura due to spell #spellid from the selected Unit.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unban', 13, 'Syntax: .unban $subcommand Type .unban to see the list of possible subcommands or .help unban $subcommand to see info on subcommands');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unban account', 13, 'Syntax: .unban account $Name Unban accounts for account name pattern.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unban character', 13, 'Syntax: .unban character $Name Unban accounts for character name pattern.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unban ip', 13, 'Syntax : .unban ip $Ip Unban accounts for IP pattern.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unban playeraccount', 16, '');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unbindsight', 15, 'Syntax: .unbindsight  Removes bound vision. Cannot be used while currently possessing a target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unfreeze', 9, 'Syntax: .unfreeze (#player) "Unfreezes" #player and enables his chat again. When using this without #name it will unfreeze your target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unlearn', 13, 'Syntax: .unlearn #spell [all]  Unlearn for selected player a spell #spell.  If \'all\' provided then all ranks unlearned.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unmute', 12, 'Syntax: .unmute [$playerName]  Restore chat messaging for any character from account of character $playerName (or selected). Character can be ofline.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unpossess', 12, 'Syntax: .unpossess  If you are possessed, unpossesses yourself; otherwise unpossesses current possessed target.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('unstuck', 6, 'Syntax: .unstuck $playername [inn/graveyard/startzone]  Teleports specified player to specified location. Default location is player\'s current hearth location.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wchange', 12, 'Syntax: .wchange #weathertype #status  Set current weather to #weathertype with an intensity of #status.  #weathertype can be 1 for rain, 2 for snow, and 3 for sand. #status can be 0 for disabled, and 1 for enabled.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('whispers', 5, 'Syntax: .whispers on|off Enable/disable accepting whispers by GM from players. By default use trinityd.conf setting.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wp', 9, 'Syntax: wp $subcommand  Type .wp to see a list of possible subcommands  or .help wp $subcommand to see info on the subcommand.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wp add', 9, 'Syntax: .wp add  Add a waypoint for the selected creature at your current position.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wp event', 9, 'Syntax: .wp event $subcommand Type .path event to see the list of possible subcommands or .help path event $subcommand to see info on subcommands.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wp load', 9, 'Syntax: .wp load $pathid Load pathid number for selected creature. Creature must have no waypoint data.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wp modify', 13, 'Syntax: ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wp reload', 13, 'Syntax: .wp reload $pathid Load path changes ingame - IMPORTANT: must be applied first for new paths before .wp load #pathid ');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wp show', 9, 'Syntax: .wp show $option Options: on $pathid (or selected creature with loaded path) - Show path off - Hide path info $slected_waypoint - Show info for selected waypoint.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wp unload', 13, 'Syntax: .wp unload Unload path for selected creature.');
REPLACE INTO `command` (`name`, `security`, `help`) VALUES ('wpgps', 16, 'Syntax: .wpgps  Output current position to sql developer log as partial SQL query to be used in pathing');
